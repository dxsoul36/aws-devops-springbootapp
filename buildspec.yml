version: 0.2

env:
  variables:
    IMAGE_REPO_NAME: aws-devops-springbootapp
    AWS_REGION: us-east-1

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version
      # Login to private ECR
      - $(aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin 674728557562.dkr.ecr.us-east-1.amazonaws.com)
      # Define image repo URI and tag
      - REPOSITORY_URI=674728557562.dkr.ecr.us-east-1.amazonaws.com/$IMAGE_REPO_NAME
      - IMAGE_TAG=build-$(echo $CODEBUILD_BUILD_ID | awk -F":" '{print $2}')
  build:
    commands:
      - echo Build started on `date`
      - echo Building the JAR file using Maven...
      - mvn clean install
      - echo Building Docker image...
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing Docker image to ECR...
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Creating imagedefinitions.json for ECS deployment...
      - DOCKER_CONTAINER_NAME=springboot-app
      - printf '[{"name":"%s","imageUri":"%s"}]' $DOCKER_CONTAINER_NAME $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - echo Displaying imagedefinitions.json:
      - cat imagedefinitions.json

artifacts:
  files:
    - imagedefinitions.json
    - target/springboot-aws-deploy.jar
